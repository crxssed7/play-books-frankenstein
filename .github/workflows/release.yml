name: Build and release for all platforms

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

# on:
#   push:
#     branches: [main]

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.13"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          pipenv install --deploy --system
          pip install pyinstaller

      - name: Build with PyInstaller
        run: pyinstaller main.spec

      - name: Zip macOS .app bundle
        if: matrix.os == 'macos-latest'
        run: |
          cd dist
          zip -r frankenstein-macos.zip frankenstein.app

      - name: Upload artifact (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: frankenstein-macos
          path: dist/frankenstein-macos.zip

      - name: Upload artifact (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: frankenstein-windows
          path: dist/frankenstein.exe

      - name: Upload artifact (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: frankenstein-linux
          path: dist/frankenstein

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3

      - name: Get current tag
        id: get_tag
        run: echo "tag=${GITHUB_REF##*/}" >> "$GITHUB_OUTPUT"

      - name: Get previous tag (if exists)
        id: get_previous_tag
        continue-on-error: true
        run: |
          prev_tag=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "tag=$prev_tag" >> "$GITHUB_OUTPUT"

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ steps.get_tag.outputs.tag }}
          tag_name: ${{ steps.get_tag.outputs.tag }}
          body: |
            ðŸŽ‰ New release: **v${{ steps.get_tag.outputs.tag }}**

            ${{ steps.get_previous_tag.outputs.tag != '' && format('Full changelog can be viewed [here](https://github.com/{0}/compare/{1}...{2}).', github.repository, steps.get_previous_tag.outputs.tag, steps.get_tag.outputs.tag) || 'This is the first release.' }}
          files: ./artifacts/**/*
